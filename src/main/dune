(library
 (name learnocaml_server_args)
 (modules Learnocaml_server_args)
 (libraries cmdliner
            learnocaml_server_lib)
)

(executable
;; (package learn-ocaml) ;; missing support in dune, manually installed below
;; (public_name learn-ocaml)
 (name learnocaml_main)
 (modes byte_complete)
 (ocamlc_flags -custom)
 (flags :standard -linkall -verbose (:include linking_main.sexp))
 (modules Learnocaml_main)
 (libraries cmdliner
            sha
            markup
            markup-lwt
            learnocaml_process_repository_lib
            learnocaml_server_lib
            learnocaml_server_args
            learnocaml_report)
)
(install
 (files (learnocaml_main.bc.exe as learn-ocaml))
 (section bin)
 (package learn-ocaml))

(executable
;; (package learn-ocaml-client) ;; missing support in dune, manually installed below
;; (public_name learn-ocaml-client)
 (name learnocaml_client)
 (modes byte_complete)
 (ocamlc_flags -custom)
 (flags :standard -linkall (:include linking_client.sexp))
 (modules Learnocaml_client)
 (libraries cmdliner
 	    sha
            lwt.unix
            lwt_utils
            cohttp-lwt
            cohttp-lwt-unix
            grading_cli
            learnocaml_data
	    learnocaml_store
            learnocaml_api)
)
(install
 (files (learnocaml_client.bc.exe as learn-ocaml-client))
 (section bin)
 (package learn-ocaml-client))

(executable
 (package learn-ocaml)
 (public_name learn-ocaml-server)
 (name learnocaml_server_main)
 (modules learnocaml_server_main)
 (libraries learnocaml_server_args)
 (flags       (:standard
               (:include linking_server.sexp)))
)

(rule
  (targets linking_main.sexp)
  (action  (with-stdout-to %{targets}
    (run ./linking_flags.sh %{env:LINKING_MODE=dynamic} %{ocaml-config:system} checkseum_c_stubs threads camlrun))))
(rule
  (targets linking_client.sexp)
  (action  (with-stdout-to %{targets}
    (run ./linking_flags.sh %{env:LINKING_MODE=dynamic} %{ocaml-config:system} threads camlrun))))
(rule
  (targets linking_server.sexp)
  (action  (with-stdout-to %{targets}
    (run ./linking_flags.sh %{env:LINKING_MODE=dynamic} -- checkseum_c_stubs threadsnat))))
