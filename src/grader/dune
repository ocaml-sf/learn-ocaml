(library
 (name learnocaml_report)
 (wrapped false)
 (flags :standard -w -37-41 -warn-error -27-39)
 (modules Learnocaml_report)
 (preprocess (pps ppx_ocplib_i18n))
 (libraries ocplib-json-typed ocplib_i18n)
)

(rule
 (targets learnocaml_report.odoc)
 (deps .learnocaml_report.objs/byte/learnocaml_report.cmti)
 (action (run odoc compile --package learn-ocaml %{deps} -o %{targets}))
)

(library
 (name testing)
 (wrapped false)
 (modes byte)
 (library_flags :standard -linkall)
 (libraries ty
            toploop
            learnocaml_ppx_metaquot
            learnocaml_ppx_metaquot_lib
            ocplib-json-typed
            learnocaml_report
            learnocaml_repository)
 (modules Introspection_intf
          Introspection
          Test_lib
          Mutation_test)
 (modules_without_implementation Introspection_intf)
 (preprocess (pps learnocaml_ppx_metaquot))
)

(rule
 (targets test_lib.odoc)
 (deps .testing.objs/byte/test_lib.cmti)
 (action (run odoc compile --package learn-ocaml %{deps} -o %{targets}))
)

(alias
 (name doc)
 (action (progn (run mkdir -p doc)
                (run odoc html %{dep:learnocaml_report.odoc} -o %{workspace_root}/_doc/_html)
                (run odoc html %{dep:test_lib.odoc} -o %{workspace_root}/_doc/_html)))
)



(rule
 (targets embedded_cmis.ml)
 (deps
      (:stdlib_cmis
        %{ocaml-config:standard_library}/array.cmi
        %{ocaml-config:standard_library}/arrayLabels.cmi
        %{ocaml-config:standard_library}/buffer.cmi
        %{ocaml-config:standard_library}/bytes.cmi
        %{ocaml-config:standard_library}/bigarray.cmi
        %{ocaml-config:standard_library}/camlinternalFormatBasics.cmi
        %{ocaml-config:standard_library}/camlinternalFormat.cmi
        %{ocaml-config:standard_library}/camlinternalLazy.cmi
        %{ocaml-config:standard_library}/camlinternalMod.cmi
        %{ocaml-config:standard_library}/camlinternalOO.cmi
        %{ocaml-config:standard_library}/compiler-libs/topdirs.cmi
        %{ocaml-config:standard_library}/char.cmi
        %{ocaml-config:standard_library}/complex.cmi
        %{ocaml-config:standard_library}/digest.cmi
        %{ocaml-config:standard_library}/filename.cmi
        %{ocaml-config:standard_library}/format.cmi
        %{ocaml-config:standard_library}/hashtbl.cmi
        %{ocaml-config:standard_library}/int32.cmi
        %{ocaml-config:standard_library}/int64.cmi
        %{ocaml-config:standard_library}/lazy.cmi
        %{ocaml-config:standard_library}/lexing.cmi
        %{ocaml-config:standard_library}/list.cmi
        %{ocaml-config:standard_library}/map.cmi
        %{ocaml-config:standard_library}/marshal.cmi
        %{ocaml-config:standard_library}/pervasives.cmi
        %{ocaml-config:standard_library}/printexc.cmi
        %{ocaml-config:standard_library}/printf.cmi
        %{ocaml-config:standard_library}/queue.cmi
        %{ocaml-config:standard_library}/random.cmi
        %{ocaml-config:standard_library}/scanf.cmi
        %{ocaml-config:standard_library}/set.cmi
        %{ocaml-config:standard_library}/stack.cmi
        %{ocaml-config:standard_library}/string.cmi
        %{ocaml-config:standard_library}/sys.cmi
        %{ocaml-config:standard_library}/uchar.cmi
        %{ocaml-config:standard_library}/weak.cmi)

       (:local_cmis
         ../toplevel/.learnocaml_toplevel_pp.objs/byte/learnocaml_toplevel_pp.cmi)

       (:lib_cmis
         %{lib:re:re.cmi}
         %{lib:gg:gg.cmi}
         %{lib:vg:vg.cmi}
         %{lib:vg:vgr_svg.cmi}))
 (action
   (with-stdout-to %{targets}
    (run ocp-ocamlres -format ocamlres %{stdlib_cmis} %{local_cmis} %{lib_cmis}))
 )
)

(library
 (name embedded_cmis)
 (wrapped false)
 (modes byte)
 (modules Embedded_cmis)
 (libraries ocplib-ocamlres.runtime bigarray
            learnocaml_toplevel_pp
            vg gg vg.svg
            re)
)

(rule
 (targets embedded_grading_cmis.ml)
 (deps (:compiler-cmis
        %{ocaml-config:standard_library}/compiler-libs/longident.cmi
        %{ocaml-config:standard_library}/compiler-libs/asttypes.cmi
        %{ocaml-config:standard_library}/compiler-libs/ast_helper.cmi
        %{ocaml-config:standard_library}/compiler-libs/ast_mapper.cmi
        %{ocaml-config:standard_library}/compiler-libs/parsetree.cmi
        %{ocaml-config:standard_library}/compiler-libs/location.cmi
        %{ocaml-config:standard_library}/compiler-libs/parse.cmi)
       (:generated-cmis
        ../ppx-metaquot/.ty.objs/byte/ty.cmi
        ../ppx-metaquot/.fun_ty.objs/byte/fun_ty.cmi
        .testing.objs/byte/introspection_intf.cmi
        .learnocaml_report.objs/byte/learnocaml_report.cmi
        .testing.objs/byte/test_lib.cmi
        .testing.objs/byte/mutation_test.cmi))
 (action (with-stdout-to %{targets}
           (run ocp-ocamlres -format ocamlres %{compiler-cmis} %{generated-cmis})))
)

(library
 (name grading)
 (wrapped false)
 (modes byte)
 (library_flags :standard -linkall)
 (libraries testing
            learnocaml_ppx_metaquot
            ocplib-ocamlres.runtime
            embedded_cmis
            ocplib_i18n
            learnocaml_report)
 (modules Embedded_grading_cmis
          Grading)
 (preprocess (per_module ((pps ppx_ocplib_i18n learnocaml_ppx_metaquot) Grading)))
)


(library
 (name grading_cli)
 (wrapped false)
 (modes byte)
 (libraries toploop_unix
            grading
            ocplib-ocamlres
            ezjsonm
            lwt_utils
            learnocaml_report
            learnocaml_data)
 (modules Grading_cli Grader_cli)
)

(library
 (name grader_jsoo_messages)
 (wrapped false)
 (modes byte)
 (libraries learnocaml_repository
            learnocaml_report)
 (modules Grader_jsoo_messages)
)

(library
 (name grading_jsoo)
 (wrapped false)
 (modes byte)
 (libraries js_of_ocaml
            js_of_ocaml-lwt
            js_of_ocaml-ppx
            ezjsonm
            ocplib-json-typed.browser
            learnocaml_repository
            learnocaml_report
            js_of_ocaml.ppx
            grader_jsoo_messages)
 (modules Grading_jsoo)
 (preprocess (pps js_of_ocaml.ppx))
)

(executable
 (name grader_jsoo_worker)
 (modes byte)
 (flags :standard -warn-error -9-27)
 (link_flags :standard -linkall)
 (libraries toploop_jsoo
            grading
            ezjsonm
            ocplib-json-typed.browser
            js_of_ocaml
            js_of_ocaml-ppx
            ocplib_i18n
            learnocaml_repository
            learnocaml_report
            jsutils
            js_of_ocaml.ppx
            grader_jsoo_messages)
 (modules Grader_jsoo_worker)
 (preprocess (pps ppx_ocplib_i18n js_of_ocaml.ppx))
 (js_of_ocaml (flags :standard --toplevel --nocmis
                     +cstruct/cstruct.js +dynlink.js +toplevel.js))
)

(install
 (package learn-ocaml)
 (section share)
 (files (grader_jsoo_worker.bc.js as www/js/learnocaml-grader-worker.js))
)
