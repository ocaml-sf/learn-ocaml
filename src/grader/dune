(library
 (name learnocaml_report)
 (wrapped false)
 (flags :standard -w -37-41 -warn-error -27-39)
 (modules Learnocaml_report)
 (preprocess (pps ppx_ocplib_i18n))
 (preprocessor_deps (sandbox none))
 (libraries json-data-encoding ocplib_i18n)
)

(rule
 (targets learnocaml_report.odoc)
 (deps .learnocaml_report.objs/byte/learnocaml_report.cmti)
 (action (run odoc compile --package learn-ocaml %{deps} -o %{targets}))
)

;; needs to be a separate lib because the module is shared between evaluator
;; parts (Grading) and dynamic parts (Test_lib)
(library
 (name introspection_intf)
 (wrapped false)
 (modules introspection_intf)
 (modules_without_implementation introspection_intf)
 (libraries unix learnocaml_report ty))

;; dynamic part, on which Test_lib depends
(library
 (name pre_test)
 (wrapped false)
 (modules learnocaml_callback learnocaml_internal pre_test)
 (modules_without_implementation learnocaml_callback learnocaml_internal pre_test)
 (libraries compiler-libs
            learnocaml_report
            learnocaml_internal_intf
            introspection_intf))

;; dynamic (but pre-compiled) part
(library
 (name testing_dyn)
 (wrapped false)
 (modes byte)
 (library_flags :standard -linkall)
 (libraries ty
            toploop
            learnocaml_ppx_metaquot_lib
            grader_ppx
            json-data-encoding
            learnocaml_report
            learnocaml_repository
            introspection_intf
            pre_test)
 (modules Test_lib)
 (preprocess (pps grader_ppx))
)
(rule
 (target testing_dyn.js)
 (deps testing_dyn.cma)
 (action (run js_of_ocaml --no-source-map --opt=2 --enable=use-js-string --target-env=browser %{deps})))

(rule
 (targets test_lib.odoc)
 (deps .testing_dyn.objs/byte/test_lib.cmti)
 (action (run odoc compile --package learn-ocaml %{deps} -o %{targets}))
)

(rule
 (alias doc)
 (action (progn (run mkdir -p doc)
                (run odoc html %{dep:learnocaml_report.odoc} -o %{workspace_root}/_doc/_html)
                (run odoc html %{dep:test_lib.odoc} -o %{workspace_root}/_doc/_html)))
)



(rule
 (targets embedded_cmis.ml)
 (deps
    (:stdlib_cmis
       %{ocaml-config:standard_library}/stdlib.cmi
       %{ocaml-config:standard_library}/stdlib__Arg.cmi
       %{ocaml-config:standard_library}/stdlib__Array.cmi
       %{ocaml-config:standard_library}/stdlib__ArrayLabels.cmi
       %{ocaml-config:standard_library}/stdlib__Atomic.cmi
       %{ocaml-config:standard_library}/stdlib__Bigarray.cmi
       %{ocaml-config:standard_library}/stdlib__Bool.cmi
       %{ocaml-config:standard_library}/stdlib__Buffer.cmi
       %{ocaml-config:standard_library}/stdlib__Bytes.cmi
       %{ocaml-config:standard_library}/stdlib__BytesLabels.cmi
       %{ocaml-config:standard_library}/stdlib__Callback.cmi
       %{ocaml-config:standard_library}/stdlib__Char.cmi
       %{ocaml-config:standard_library}/stdlib__Complex.cmi
       %{ocaml-config:standard_library}/stdlib__Condition.cmi
       %{ocaml-config:standard_library}/stdlib__Digest.cmi
       %{ocaml-config:standard_library}/stdlib__Domain.cmi
       %{ocaml-config:standard_library}/stdlib__Effect.cmi
       %{ocaml-config:standard_library}/stdlib__Either.cmi
       %{ocaml-config:standard_library}/stdlib__Ephemeron.cmi
       %{ocaml-config:standard_library}/stdlib__Filename.cmi
       %{ocaml-config:standard_library}/stdlib__Float.cmi
       %{ocaml-config:standard_library}/stdlib__Format.cmi
       %{ocaml-config:standard_library}/stdlib__Fun.cmi
       %{ocaml-config:standard_library}/stdlib__Gc.cmi
       %{ocaml-config:standard_library}/stdlib__Hashtbl.cmi
       %{ocaml-config:standard_library}/stdlib__In_channel.cmi
       %{ocaml-config:standard_library}/stdlib__Int32.cmi
       %{ocaml-config:standard_library}/stdlib__Int64.cmi
       %{ocaml-config:standard_library}/stdlib__Int.cmi
       %{ocaml-config:standard_library}/stdlib__Lazy.cmi
       %{ocaml-config:standard_library}/stdlib__Lexing.cmi
       %{ocaml-config:standard_library}/stdlib__List.cmi
       %{ocaml-config:standard_library}/stdlib__ListLabels.cmi
       %{ocaml-config:standard_library}/stdlib__Map.cmi
       %{ocaml-config:standard_library}/stdlib__Marshal.cmi
       %{ocaml-config:standard_library}/stdlib__MoreLabels.cmi
       %{ocaml-config:standard_library}/stdlib__Mutex.cmi
       %{ocaml-config:standard_library}/stdlib__Nativeint.cmi
       %{ocaml-config:standard_library}/stdlib__Obj.cmi
       %{ocaml-config:standard_library}/stdlib__Oo.cmi
       %{ocaml-config:standard_library}/stdlib__Option.cmi
       %{ocaml-config:standard_library}/stdlib__Out_channel.cmi
       %{ocaml-config:standard_library}/stdlib__Parsing.cmi
       %{ocaml-config:standard_library}/stdlib__Printexc.cmi
       %{ocaml-config:standard_library}/stdlib__Printf.cmi
       %{ocaml-config:standard_library}/stdlib__Queue.cmi
       %{ocaml-config:standard_library}/stdlib__Random.cmi
       %{ocaml-config:standard_library}/stdlib__Result.cmi
       %{ocaml-config:standard_library}/stdlib__Scanf.cmi
       %{ocaml-config:standard_library}/stdlib__Semaphore.cmi
       %{ocaml-config:standard_library}/stdlib__Seq.cmi
       %{ocaml-config:standard_library}/stdlib__Set.cmi
       %{ocaml-config:standard_library}/stdlib__Stack.cmi
       %{ocaml-config:standard_library}/stdlib__StdLabels.cmi
       %{ocaml-config:standard_library}/stdlib__String.cmi
       %{ocaml-config:standard_library}/stdlib__StringLabels.cmi
       %{ocaml-config:standard_library}/stdlib__Sys.cmi
       %{ocaml-config:standard_library}/stdlib__Uchar.cmi
       %{ocaml-config:standard_library}/stdlib__Unit.cmi
       %{ocaml-config:standard_library}/stdlib__Weak.cmi
       %{ocaml-config:standard_library}/camlinternalFormatBasics.cmi
       %{ocaml-config:standard_library}/camlinternalFormat.cmi
       %{ocaml-config:standard_library}/camlinternalLazy.cmi
       %{ocaml-config:standard_library}/camlinternalMod.cmi
       %{ocaml-config:standard_library}/camlinternalOO.cmi
       %{ocaml-config:standard_library}/std_exit.cmi
       %{ocaml-config:standard_library}/compiler-libs/topdirs.cmi)
    (:local_cmis
       ../toplevel/.learnocaml_toplevel_pp.objs/byte/learnocaml_toplevel_pp.cmi)

    (:lib_cmis
       %{lib:re:re.cmi}
       %{lib:gg:gg.cmi}
       %{lib:vg:vg.cmi}
       %{lib:vg:vgr_svg.cmi}))

 (action (with-stdout-to %{targets} (run ocp-ocamlres -format ocamlres %{stdlib_cmis} %{local_cmis} %{lib_cmis})))
)

(library
 (name embedded_cmis)
 (wrapped false)
 (modes byte)
 (modules Embedded_cmis)
 (libraries ocplib-ocamlres.runtime bigarray
            learnocaml_toplevel_pp
            vg gg vg.svg
            re)
)

(rule
 (targets embedded_grading_lib.ml)
 (deps
  .pre_test.objs/byte/learnocaml_callback.cmi
  .pre_test.objs/byte/learnocaml_internal.cmi
  ;; .pre_test.objs/byte/pre_test.cmi -- only test_lib should be needed
  .testing_dyn.objs/byte/test_lib.cmi
  testing_dyn.cma
  testing_dyn.js)
 (action (with-stdout-to %{targets}
           (run ocp-ocamlres -format ocamlres %{deps})))
)

(library
 (name grading)
 (wrapped false)
 (modes byte)
 (library_flags :standard -linkall)
 (libraries grader_ppx
            ocplib-ocamlres.runtime
            toploop
            learnocaml_internal_intf
            introspection_intf
            embedded_cmis
            ocplib_i18n
            learnocaml_report
            learnocaml_repository)
 (modules Introspection
          Embedded_grading_lib
          Grading)
 (preprocess (per_module ((pps ppx_ocplib_i18n grader_ppx) Grading)))
 (preprocessor_deps (sandbox none))
)


(library
 (name grading_cli)
 (wrapped false)
 (modes byte)
 (libraries toploop_unix
            grading
            ocplib-ocamlres
            ezjsonm
            lwt_utils
            learnocaml_report
            learnocaml_data)
 (modules Grading_cli Grader_cli)
)

(library
 (name grader_jsoo_messages)
 (wrapped false)
 (modes byte)
 (libraries learnocaml_repository
            learnocaml_report)
 (modules Grader_jsoo_messages)
)

(library
 (name grading_jsoo)
 (wrapped false)
 (modes byte)
 (libraries js_of_ocaml
            js_of_ocaml-lwt
            js_of_ocaml-ppx
            ezjsonm
            jsutils
            json-data-encoding-browser
            learnocaml_repository
            learnocaml_report
            grader_jsoo_messages)
 (modules Grading_jsoo)
 (preprocess (pps js_of_ocaml-ppx))
)

(executable
 (name grader_jsoo_worker)
 (modes byte js)
 (flags :standard -warn-error -9-27)
 (link_flags :standard -linkall)
 (libraries toploop_jsoo
            grading
            ezjsonm
            json-data-encoding-browser
            js_of_ocaml
            js_of_ocaml-ppx
            ocplib_i18n
            learnocaml_repository
            learnocaml_report
            jsutils
            grader_jsoo_messages)
 (modules Grader_jsoo_worker)
 (preprocess (pps ppx_ocplib_i18n js_of_ocaml-ppx))
 (preprocessor_deps (sandbox none))
 (js_of_ocaml (flags :standard --toplevel --nocmis
                     +dynlink.js +toplevel.js))
)

(install
 (package learn-ocaml)
 (section share)
 (files (grader_jsoo_worker.bc.js as www/js/learnocaml-grader-worker.js))
)
