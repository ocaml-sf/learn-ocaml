(library
 (name learnocaml_report)
 (wrapped false)
 (flags :standard -w -37-41 -warn-error -27-39)
 (modules Learnocaml_report)
 (preprocess (pps ppx_ocplib_i18n))
 (libraries ocplib-json-typed ocplib_i18n)
)

(rule
 (targets learnocaml_report.odoc)
 (deps .learnocaml_report.objs/byte/learnocaml_report.cmti)
 (action (run odoc compile --package learn-ocaml %{deps} -o %{targets}))
)

(library
 (name testing)
 (wrapped false)
 (modes byte)
 (library_flags :standard -linkall)
 (libraries ty
            toploop
            learnocaml_ppx_metaquot
            learnocaml_ppx_metaquot_lib
            ocplib-json-typed
            learnocaml_report
            learnocaml_repository)
 (modules Introspection_intf
          Introspection
          Test_lib
          Mutation_test)
 (modules_without_implementation Introspection_intf)
 (preprocess (pps learnocaml_ppx_metaquot))
)

(rule
 (targets test_lib.odoc)
 (deps .testing.objs/byte/test_lib.cmti)
 (action (run odoc compile --package learn-ocaml %{deps} -o %{targets}))
)

(rule
 (alias doc)
 (action (progn (run mkdir -p doc)
                (run odoc html %{dep:learnocaml_report.odoc} -o %{workspace_root}/_doc/_html)
                (run odoc html %{dep:test_lib.odoc} -o %{workspace_root}/_doc/_html)))
)



(rule
 (targets embedded_cmis.ml)
 (deps
    (:stdlib_cmis
       %{ocaml-config:standard_library}/stdlib.cmi
       %{ocaml-config:standard_library}/stdlib__arg.cmi
       %{ocaml-config:standard_library}/stdlib__array.cmi
       %{ocaml-config:standard_library}/stdlib__arrayLabels.cmi
       %{ocaml-config:standard_library}/stdlib__bigarray.cmi
       %{ocaml-config:standard_library}/stdlib__bool.cmi
       %{ocaml-config:standard_library}/stdlib__buffer.cmi
       %{ocaml-config:standard_library}/stdlib__bytes.cmi
       %{ocaml-config:standard_library}/stdlib__bytesLabels.cmi
       %{ocaml-config:standard_library}/stdlib__callback.cmi
       %{ocaml-config:standard_library}/stdlib__char.cmi
       %{ocaml-config:standard_library}/stdlib__complex.cmi
       %{ocaml-config:standard_library}/stdlib__digest.cmi
       %{ocaml-config:standard_library}/stdlib__ephemeron.cmi
       %{ocaml-config:standard_library}/stdlib__filename.cmi
       %{ocaml-config:standard_library}/stdlib__float.cmi
       %{ocaml-config:standard_library}/stdlib__format.cmi
       %{ocaml-config:standard_library}/stdlib__fun.cmi
       %{ocaml-config:standard_library}/stdlib__gc.cmi
       %{ocaml-config:standard_library}/stdlib__genlex.cmi
       %{ocaml-config:standard_library}/stdlib__hashtbl.cmi
       %{ocaml-config:standard_library}/stdlib__int.cmi
       %{ocaml-config:standard_library}/stdlib__int32.cmi
       %{ocaml-config:standard_library}/stdlib__int64.cmi
       %{ocaml-config:standard_library}/stdlib__lazy.cmi
       %{ocaml-config:standard_library}/stdlib__lexing.cmi
       %{ocaml-config:standard_library}/stdlib__list.cmi
       %{ocaml-config:standard_library}/stdlib__listLabels.cmi
       %{ocaml-config:standard_library}/stdlib__map.cmi
       %{ocaml-config:standard_library}/stdlib__marshal.cmi
       %{ocaml-config:standard_library}/stdlib__moreLabels.cmi
       %{ocaml-config:standard_library}/stdlib__nativeint.cmi
       %{ocaml-config:standard_library}/stdlib__obj.cmi
       %{ocaml-config:standard_library}/stdlib__oo.cmi
       %{ocaml-config:standard_library}/stdlib__option.cmi
       %{ocaml-config:standard_library}/stdlib__parsing.cmi
       %{ocaml-config:standard_library}/stdlib__pervasives.cmi
       %{ocaml-config:standard_library}/stdlib__printexc.cmi
       %{ocaml-config:standard_library}/stdlib__printf.cmi
       %{ocaml-config:standard_library}/stdlib__queue.cmi
       %{ocaml-config:standard_library}/stdlib__random.cmi
       %{ocaml-config:standard_library}/stdlib__result.cmi
       %{ocaml-config:standard_library}/stdlib__scanf.cmi
       %{ocaml-config:standard_library}/stdlib__seq.cmi
       %{ocaml-config:standard_library}/stdlib__set.cmi
       %{ocaml-config:standard_library}/stdlib__stack.cmi
       %{ocaml-config:standard_library}/stdlib__stdLabels.cmi
       %{ocaml-config:standard_library}/stdlib__stream.cmi
       %{ocaml-config:standard_library}/stdlib__string.cmi
       %{ocaml-config:standard_library}/stdlib__stringLabels.cmi
       %{ocaml-config:standard_library}/stdlib__sys.cmi
       %{ocaml-config:standard_library}/stdlib__uchar.cmi
       %{ocaml-config:standard_library}/stdlib__unit.cmi
       %{ocaml-config:standard_library}/stdlib__weak.cmi
       %{ocaml-config:standard_library}/camlinternalFormatBasics.cmi
       %{ocaml-config:standard_library}/camlinternalFormat.cmi
       %{ocaml-config:standard_library}/camlinternalLazy.cmi
       %{ocaml-config:standard_library}/camlinternalMod.cmi
       %{ocaml-config:standard_library}/camlinternalOO.cmi
       %{ocaml-config:standard_library}/bigarray.cmi
       %{ocaml-config:standard_library}/std_exit.cmi
       %{ocaml-config:standard_library}/topdirs.cmi)
    (:local_cmis
       ../toplevel/.learnocaml_toplevel_pp.objs/byte/learnocaml_toplevel_pp.cmi)

    (:lib_cmis
       %{lib:re:re.cmi}
       %{lib:gg:gg.cmi}
       %{lib:vg:vg.cmi}
       %{lib:vg:vgr_svg.cmi}))

 (action (with-stdout-to %{targets} (run ocp-ocamlres -format ocamlres %{stdlib_cmis} %{local_cmis} %{lib_cmis})))
)

(library
 (name embedded_cmis)
 (wrapped false)
 (modes byte)
 (modules Embedded_cmis)
 (libraries ocplib-ocamlres.runtime bigarray
            learnocaml_toplevel_pp
            vg gg vg.svg
            re)
)

(rule
 (targets embedded_grading_cmis.ml)
 (deps (:compiler-cmis
        %{ocaml-config:standard_library}/compiler-libs/longident.cmi
        %{ocaml-config:standard_library}/compiler-libs/asttypes.cmi
        %{ocaml-config:standard_library}/compiler-libs/ast_helper.cmi
        %{ocaml-config:standard_library}/compiler-libs/ast_mapper.cmi
        %{ocaml-config:standard_library}/compiler-libs/parsetree.cmi
        %{ocaml-config:standard_library}/compiler-libs/location.cmi
        %{ocaml-config:standard_library}/compiler-libs/parse.cmi
        %{ocaml-config:standard_library}/compiler-libs/pprintast.cmi)
       (:generated-cmis
        ../ppx-metaquot/.ty.objs/byte/ty.cmi
        ../ppx-metaquot/.fun_ty.objs/byte/fun_ty.cmi
        .testing.objs/byte/introspection_intf.cmi
        .learnocaml_report.objs/byte/learnocaml_report.cmi
        .testing.objs/byte/test_lib.cmi
        .testing.objs/byte/mutation_test.cmi))
 (action (with-stdout-to %{targets}
           (run ocp-ocamlres -format ocamlres %{compiler-cmis} %{generated-cmis})))
)

(library
 (name grading)
 (wrapped false)
 (modes byte)
 (library_flags :standard -linkall)
 (libraries testing
            learnocaml_ppx_metaquot
            ocplib-ocamlres.runtime
            embedded_cmis
            ocplib_i18n
            learnocaml_report)
 (modules Embedded_grading_cmis
          Grading)
 (preprocess (per_module ((pps ppx_ocplib_i18n learnocaml_ppx_metaquot) Grading)))
)


(library
 (name grading_cli)
 (wrapped false)
 (modes byte)
 (libraries toploop_unix
            grading
            ocplib-ocamlres
            ezjsonm
            lwt_utils
            learnocaml_report
            learnocaml_data)
 (modules Grading_cli Grader_cli)
)

(library
 (name grader_jsoo_messages)
 (wrapped false)
 (modes byte)
 (libraries learnocaml_repository
            learnocaml_report)
 (modules Grader_jsoo_messages)
)

(library
 (name grading_jsoo)
 (wrapped false)
 (modes byte)
 (libraries js_of_ocaml
            js_of_ocaml-lwt
            js_of_ocaml-ppx
            ezjsonm
            jsutils
            ocplib-json-typed-browser
            learnocaml_repository
            learnocaml_report
            grader_jsoo_messages)
 (modules Grading_jsoo)
 (preprocess (pps js_of_ocaml-ppx))
)

(executable
 (name grader_jsoo_worker)
 (modes byte js)
 (flags :standard -warn-error -9-27)
 (link_flags :standard -linkall)
 (libraries toploop_jsoo
            grading
            ezjsonm
            ocplib-json-typed-browser
            js_of_ocaml
            js_of_ocaml-ppx
            ocplib_i18n
            learnocaml_repository
            learnocaml_report
            jsutils
            grader_jsoo_messages)
 (modules Grader_jsoo_worker)
 (preprocess (pps ppx_ocplib_i18n js_of_ocaml-ppx))
 (js_of_ocaml (flags :standard --toplevel --nocmis
                     +dynlink.js +toplevel.js))
)

(install
 (package learn-ocaml)
 (section share)
 (files (grader_jsoo_worker.bc.js as www/js/learnocaml-grader-worker.js))
)
